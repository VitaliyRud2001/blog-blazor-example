@page "/paging"
@using Blog_blazor.Data


<style>
    .center {
        text-align: center;
    }

    .pagination {
        display: inline-block;
    }

    .pagination a {
        color: black;
        float: left;
        padding: 8px 16px;
        text-decoration: none;
        transition: background-color .3s;
        border: 1px solid #ddd;
        margin: 0 4px;
    }

    .pagination a.active {
        background-color: #4CAF50;
        color: white;
        border: 1px solid #4CAF50;
    }

    .pagination a:hover:not(.active) {background-color: #ddd;}
</style>

<div class="center">
    <div class="pagination">
        @for (int i = 0; i < (int) Math.Ceiling((decimal) TotalCount / PageSize); i++)
        {
            int temp = i;
            <a @onclick="@(e=>Change(temp+1))">@(i+1)</a>
        }
    </div>
</div>
@code {
    [Parameter]
    public int Page { get; set; }

    [Parameter]
    public EventCallback<int> PageChanged { get; set; }

    [Parameter]
    public int PageSize { get; set; }

    [Parameter]
    public int? TotalCount { get; set; }

    public Task Change(int a)
    {
        return PageChanged.InvokeAsync(a);
    }

}
